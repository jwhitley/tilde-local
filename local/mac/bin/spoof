#!/usr/bin/env ruby

# See http://osxdaily.com/2008/01/17/how-to-spoof-your-mac-address-in-mac-os-x/

require 'pathname'
saved_mac_addr = Pathname.new("~/.mac_addr_for_koi").expand_path

# Save our current MAC address
unless saved_mac_addr.exist?
  ifconfig = `ifconfig en1`

  MAC_RE = /^\s+ether (?<mac>\h{2}:\h{2}:\h{2}:\h{2}:\h{2}:\h{2}+)/
  mac_addr = MAC_RE.match(ifconfig)['mac']

  hostname = `scutil --get ComputerName`.strip

  File.open(File.expand_path("~/.mac_addr_for_#{hostname}"),'w') do |f|
    f.write(mac_addr)
  end
end

opts = {}

if File.basename($0) == "unspoof" or ARGV.include?("-r")
  opts[:restore] = true 
end

if opts[:restore]
  new_mac_addr = saved_mac_addr.read
else
  new_mac_addr = "e0:" + (1..5).map { |p| sprintf "%02x", rand(256) }.join(":")
end

# Now spoof our address
#
if opts[:restore]
  puts "Restoring mac address to #{new_mac_addr}"
else
  puts "Setting mac address to random: #{new_mac_addr}"
end
system "sudo ifconfig en1 ether #{new_mac_addr}"
