#!/bin/sh
#
# From: http://stackoverflow.com/questions/598672/git-how-to-squash-the-first-two-commits

# Default to the log message of the original commit
if [[ -z "$3" ]]; then
  LOG_MESSAGE=`git log --format=%B -n 1 $1`
else
  LOG_MESSAGE="$3"
fi

# Go back to the last commit that we want to form the initial commit (detach HEAD)
git checkout $2


# reset the branch pointer to the initial commit (= $1),
# but leaving the index and working tree intact.
git reset --soft $1

# amend the initial tree using the tree from $2
git commit --amend -m "$LOG_MESSAGE"

# remember the new commit sha1
TARGET=`git rev-list HEAD --max-count=1`

# go back to the original branch (assume master for this example)
git checkout master

# Replay all the commits after $2 onto the new initial commit
git rebase --onto $TARGET $2
